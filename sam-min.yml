AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  POSHub API - Template SAM minimal avec fonction, layer, rôle et variables d'environnement

Parameters:
  Stage:
    Type: String
    Default: dev
    Description: Environnement de déploiement
    AllowedValues:
      - dev
      - staging
      - prod

Resources:
  # Layer Lambda avec les dépendances
  PosHubDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub poshub-dependencies-${Stage}
      Description: Dépendances Python pour POSHub API
      ContentUri: layer.zip
      CompatibleRuntimes:
        - python3.13
      RetentionPolicy: Delete

  # Rôle IAM pour la fonction Lambda
  PosHubExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: 
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/pos/*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

  # Fonction Lambda principale
  PosHubFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub poshub-api-${Stage}
      CodeUri: .
      Handler: src.poshub_api.main.lambda_handler
      Runtime: python3.13
      MemorySize: 512
      Timeout: 30
      Role: !GetAtt PosHubExecutionRole.Arn
      Layers:
        - !Ref PosHubDependenciesLayer
      Environment:
        Variables:
          STAGE: !Ref Stage
          LOG_LEVEL: INFO
          API_KEY_PARAM: !Sub "/pos/${Stage}/api-key"
          PYTHONPATH: /var/task/src
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
        RootApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: ANY

  # Paramètre SSM pour l'API Key (exemple)
  ApiKeyParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/pos/${Stage}/api-key"
      Type: String
      Value: !Sub "test-api-key-${Stage}-changeme"
      Description: !Sub "Clé API pour POSHub - ${Stage}"

Outputs:
  PosHubApiUrl:
    Description: URL de l'API POSHub
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"
  
  PosHubFunction:
    Description: ARN de la fonction Lambda POSHub
    Value: !GetAtt PosHubFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-FunctionArn"
  
  PosHubLayer:
    Description: ARN du layer de dépendances
    Value: !Ref PosHubDependenciesLayer
    Export:
      Name: !Sub "${AWS::StackName}-LayerArn"
  
  ExecutionRole:
    Description: ARN du rôle d'exécution
    Value: !GetAtt PosHubExecutionRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ExecutionRoleArn" 